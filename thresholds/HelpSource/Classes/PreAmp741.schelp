title:: PreAmp741
summary:: Pre-Amplifier IC LM741
related:: Classes/Mixer741, Classes/PowerAmp386

DESCRIPTION::

LM741 Pre-Amplifier from David Dunn's "Thresholds and Fragile States" (2010)

Dunn's circuit topology is a basic inverting amplifier with component values:
teletype:: rin = 1k :: and teletype:: rf = 100k variable potentiometer::.

Features:

list::
  ## gain
  ## saturation
  ## inverts signal
  ## resistance network coupling
::

Gain is calculated according to the formula:

teletype::
  gain = rf / rin, with R in ohms
::

SUBSECTION::Resistance Network
The pre-amplifier is a point of signal coupling between oscillator pairs
through a emphasis::resistance network::. The resistance network makes
contact to the op-amp inverting input allowing pre-amplifiers to be coupled.
In Dunn's network, pre-amplifiers from separate oscillator pairs are coupled.

This is implemented as teletype::rNetSigIn:: and teletype::rNetResIn::. It
is necessary to know both the voltage and resistance of coupled signals in
order to calculate the gain across pre-amplifiers.

from "Thresholds" library  -dkant, 2016


CLASSMETHODS::
private:: categories

METHOD:: ar

ARGUMENT:: in
The input signal.

ARGUMENT:: val
Potentiometer value determines teletype::gain:: from teletype::rin:: and teletype::rf::.

ARGUMENT:: rNetSigIn
Audio signal input to resistance network.

ARGUMENT:: rNetResIn
Resistance input to resistance network.

ARGUMENT:: potRmin
Potentiometer minimimum resistance.

ARGUMENT:: potRmax
Potentiometer maximum resistance.

ARGUMENT:: r2
Resistor 2 value is the minimum teletype::rf::, or offset.

ARGUMENT:: saturation
Saturation level.


EXAMPLES::

amplified sinusoid:
code::
(
// synth
y = { var sig = SinOsc.ar(258.7/1.5, mul: 0.2);
    Out.ar(0, [sig, PreAmp741.ar(sig, val: MouseY.kr(0, 1))]);
}.play;

// scope
d = Stethoscope.new(s, numChannels: 2);
d.size_(450);
d.style_(1);
d.yZoom_(1.0);
d.xZoom_(2.0);
d.scopeView.background_(Color.new(0.15, 0.15, 0.15));
d.scopeView.waveColors_([Color.cyan, Color.magenta]);
d.scopeView.fill_(true);
d.view.alwaysOnTop_(true);
d.view.onClose = {y.free;}.addFunc(d.view.onClose);
)
::

coupled pre-amplifiers:
code::
(
/*
The two source signals are in cyan + magenta and the
pre-amps are in white. Each pre-amp output is a mix
of the two input signals due to the coupling between
them.
*/

// scope busses
var scopeBus = Bus.audio(s, 4);

// synth
y = { var sig1, sig2, amp1, amp2, val1, val2;

    sig1 = SinOsc.ar(258.7/1.5*1, mul: 0.2); // test signal 1
    sig2 = SinOsc.ar(258.7/1.5*2, mul: 0.2); // test signal 2

    val1 = MouseY.kr(0, 1); // Y control amp 1 potentiometer
    val2 = MouseX.kr(0, 1); // X control amp 2 potentiometer

    amp1 = PreAmp741.ar(sig1, val: val1, rNetSigIn: sig2,
        rNetResIn: val2);
    amp2 = PreAmp741.ar(sig2, val: val2, rNetSigIn: sig1,
        rNetResIn: val1);

    // audio monitor output
    Out.ar(0, [amp1, amp2]);

    // scope output
    [sig1, sig2, amp1, amp2]

}.play(outbus: scopeBus);

// scope
d = Stethoscope.new(s, numChannels: 4, index: scopeBus.index);
d.size_(450);
d.style_(0);
d.yZoom_(1.0);
d.xZoom_(2.0);
d.scopeView.background_(Color.new(0.15, 0.15, 0.15));
d.scopeView.waveColors_([Color.cyan, Color.magenta,
    Color.white, Color.white]);
d.scopeView.fill_(true);
d.view.alwaysOnTop_(true);
d.view.onClose = {y.free;}.addFunc(d.view.onClose);
)
::